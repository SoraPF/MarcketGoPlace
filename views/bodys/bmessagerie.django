{% include "partials/head.django"%}
{% include "layouts/ads.django"%}

<script>
    function messageKey(event) {
        if (event.key === 'Enter') {
            sendMessenger();
        }
    }
   async function sendMessenger() {
        const content = document.getElementById('chat-input').value;
        const url = window.location.href;
        const conversationID = url.substring(url.lastIndexOf('/') + 1);
        const sender = document.cookie.split('; ').find(row => row.startsWith('user_id=')).split('=')[1];
    
        const data = {
            "ConversationID": parseInt(conversationID,10),
            "SenderID": parseInt(sender,10),
            "Content": content
        };
    
        const response = await fetch('/api/messenger/newMesage', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });
    
        if (response.ok) {
            sendMessage();
            
        } else {
            console.error('Erreur lors de l\'envoi du message');
        }
    }
    
    const socket = new WebSocket("ws://localhost:3000/ws");
    
    socket.onopen = function(event) {
        console.log("Connected to WebSocket server");
    };
    
    socket.onmessage = function(event) {
        const msg = JSON.parse(event.data);
        console.log("Notification received:", msg);
        if (msg.type === "chat") {
            displayMessage(msg.user_id, msg.content);
        } else if (msg.type === "notification") {
            displayMessage(msg.user_id,msg.content);
        }
    };
    
    socket.onclose = function(event) {
        console.log("Disconnected from WebSocket server");
    };
    
    function sendMessage() {
        const input = document.getElementById("chat-input");
        const messageContent = input.value;
        const userID = "{{ userid }}";
        const message = {
            type: "chat",
            user_id: userID,
            content: messageContent
        };
        socket.send(JSON.stringify(message));
        input.value = '';
    }
    
    function displayMessage(userID, content) {
        const chatBox = document.getElementById("chat-box");
        const messageDiv = document.createElement("div");
        messageDiv.classList.add("flex", "mb-2");
        if (userID === "{{ userid }}") {
            messageDiv.classList.add("justify-end");
            const messageContentDiv = document.createElement("div");
            messageContentDiv.classList.add("bg-blue-200", "p-3", "rounded-lg", "max-w-xs");
            messageContentDiv.textContent = content;
            messageDiv.appendChild(messageContentDiv);
        } else {
            messageDiv.classList.add("justify-start");
            const messageContentDiv = document.createElement("div");
            messageContentDiv.classList.add("bg-gray-200", "p-3", "rounded-lg", "max-w-xs");
            messageContentDiv.textContent = content;
            messageDiv.appendChild(messageContentDiv);
        }
        chatBox.appendChild(messageDiv);
        chatBox.scrollTop = chatBox.scrollHeight; // Scroll to the bottom
    }
    
    function displayNotification(content) {
        const chatBox = document.getElementById("chat-box");
        const notificationDiv = document.createElement("div");
        notificationDiv.classList.add("flex", "justify-start", "mb-2");
        const notificationContentDiv = document.createElement("div");
        notificationContentDiv.classList.add("bg-gray-200", "p-3", "rounded-lg", "max-w-xs");
        notificationContentDiv.textContent = content;
        notificationDiv.appendChild(notificationContentDiv);
        chatBox.appendChild(notificationDiv);
        chatBox.scrollTop = chatBox.scrollHeight;
    }
</script>

<div class="flex mt-5 mb-5 justify-center">
    <div class="w-full max-w-3xl p-6 bg-white rounded-lg shadow-lg">
        <div id="chat-box" class="h-64 p-4 mb-4 h-96 overflow-y-scroll border border-gray-200 rounded">
            {% for message in messages %}
                {% if (message.SenderID == userid) %}
                    <div class="flex justify-end mb-2">
                        <div class="bg-blue-200 p-3 rounded-lg max-w-xs">
                            {{ message.Content }}
                            <!--(Sent by you: {{ message.SenderID }})--> 
                        </div>
                    </div>
                {% else %}
                    <div class="flex justify-start mb-2">
                        <div class="bg-gray-200 p-3 rounded-lg max-w-xs">
                            {{ message.Content }}
                            <!-- (Sent by others: {{ message.SenderID }})--> 
                        </div>
                    </div>
                {% endif %}
            {% endfor %}
        </div>
        <div class="flex">
            <input type="text" onkeydown="messageKey(event)"  id="chat-input" class="flex-1 p-2 border border-gray-300 rounded-l" placeholder="Type a message...">
            <button id="send-btn" class="p-2 text-white bg-blue-500 rounded-r hover:bg-blue-600" onclick="sendMessenger()">Send</button>
        </div>
        {% if (message.SenderID == userid) %}
            <input type="text" onkeydown="priceKey(event)"  id="chat" class="flex-1 p-2 border border-gray-300 rounded-l" placeholder="Enter the price...">
            <button id="ideal_price" class="p-2 text-white bg-blue-500 rounded-r hover:bg-blue-600">hello</button>
        {% endif %}
    </div>
</div>